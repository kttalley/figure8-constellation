[{"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/App.test.tsx":"1","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/App.tsx":"2","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/Particle.tsx":"3","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/ParticlesCanvas.tsx":"4","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/hooks/useParticlesConfig.tsx":"5","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/index.tsx":"6","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/react-app-env.d.ts":"7","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/reportWebVitals.ts":"8","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/setupTests.ts":"9"},{"size":273,"mtime":1691727725768,"results":"10","hashOfConfig":"11"},{"size":556,"mtime":1691728080941,"results":"12","hashOfConfig":"11"},{"size":1685,"mtime":1691729572205,"results":"13","hashOfConfig":"11"},{"size":2679,"mtime":1691729768566,"results":"14","hashOfConfig":"11"},{"size":4831,"mtime":1691727854348,"results":"15","hashOfConfig":"11"},{"size":594,"mtime":1691728088163,"results":"16","hashOfConfig":"11"},{"size":40,"mtime":1691727729877,"results":"17","hashOfConfig":"11"},{"size":425,"mtime":1691727725769,"results":"18","hashOfConfig":"11"},{"size":241,"mtime":1691727725769,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19uuj78",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":6,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/App.test.tsx",[],[],"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/App.tsx",[],[],"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/Particle.tsx",[],[],"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/ParticlesCanvas.tsx",["49","50","51","52","53","54","55","56"],[],"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/hooks/useParticlesConfig.tsx",["57","58","59","60"],[],"import { useEffect, useState } from 'react'\nimport { range } from 'lodash'\n\nlet defaultConfig = {\n  particles: 700,\n  particlesSize: 1.2,\n  goldParticlesSize: 1.5,\n  particlesSides: 5,\n  particlesBlending: true,\n  lightIntensity: 0.4,\n  widthRadius: 100,\n  widthRatio: 1.2,\n  topHeightRadius: 80,\n  bottomHeightRadius: 100,\n  color: '#ffffff',\n  colorGold: '#b89d18',\n  xThickness: 7,\n  xRandomnessFactor: 2.2,\n  xRandomnessShape: 2.2,\n  xRandomness: 5,\n  yThickness: 20,\n  max_speed: 0.1,\n  min_speed: -0.1,\n  showGold: true,\n}\n\nconst useParticlesConfig = (): any => {\n  const isWindowUndefined = typeof window === 'undefined'\n  if (isWindowUndefined) return null\n  const hash = window.location.hash\n  const isDebugMode = hash.includes('#debug')\n  const [particles, setParticles] = useState<any[]>(range(0, defaultConfig.particles))\n\n  const [config, setConfig] = useState(defaultConfig)\n\n  const handleSetConfig = (name: string, value: any) => {\n    setConfig((prevConfig) => ({ ...prevConfig, [name]: value }))\n  }\n\n  const init = async () => {\n    if (!isDebugMode) return\n    const dat = await import('dat.gui')\n    const gui = new dat.GUI()\n    const particlesFolder = gui.addFolder('Particles')\n    const shapeFolder = gui.addFolder('Shape')\n    const speedFolder = gui.addFolder('Speed')\n\n    gui.width = 500\n    particlesFolder\n      .add(config, 'particles')\n      .min(1)\n      .max(5000)\n      .step(1)\n      .name('Count')\n      .onChange((value) => {\n        handleSetConfig('particles', value)\n        setParticles(range(0, value))\n      })\n    particlesFolder\n      .add(config, 'particlesSize')\n      .min(1)\n      .max(10)\n      .step(0.05)\n      .name('Size')\n      .onChange((value) => handleSetConfig('particlesSize', value))\n    particlesFolder\n      .add(config, 'goldParticlesSize')\n      .min(1)\n      .max(10)\n      .step(0.05)\n      .name('Gold Particles Size')\n      .onChange((value) => handleSetConfig('goldParticlesSize', value))\n    particlesFolder\n      .add(config, 'particlesSides')\n      .min(3)\n      .max(20)\n      .step(1)\n      .name('Sides')\n      .onChange((value) => handleSetConfig('particlesSides', value))\n    particlesFolder\n      .add(config, 'lightIntensity')\n      .min(0)\n      .max(10)\n      .step(0.05)\n      .name('Light intensity')\n      .onChange((value) => handleSetConfig('lightIntensity', value))\n    particlesFolder\n      .add(config, 'showGold')\n      .name('Show Gold Particles')\n      .onChange((value) => handleSetConfig('showGold', value))\n    particlesFolder\n      .add(config, 'particlesBlending')\n      .name('Blending')\n      .onChange((value) => handleSetConfig('particlesBlending', value))\n    shapeFolder\n      .add(config, 'widthRadius')\n      .min(1)\n      .max(200)\n      .step(1)\n      .name('Width Radius')\n      .onChange((value) => handleSetConfig('widthRadius', value))\n    shapeFolder\n      .add(config, 'widthRatio')\n      .min(0.5)\n      .max(3)\n      .step(0.01)\n      .name('Top/Bottom Ratio')\n      .onChange((value) => handleSetConfig('widthRatio', value))\n    shapeFolder\n      .add(config, 'topHeightRadius')\n      .min(1)\n      .max(200)\n      .step(1)\n      .name('Height Radius - Top')\n      .onChange((value) => handleSetConfig('topHeightRadius', value))\n    shapeFolder\n      .add(config, 'bottomHeightRadius')\n      .min(1)\n      .max(200)\n      .step(1)\n      .name('Height Radius - Bottom')\n      .onChange((value) => handleSetConfig('bottomHeightRadius', value))\n    shapeFolder\n      .add(config, 'xThickness')\n      .min(1)\n      .max(100)\n      .step(0.1)\n      .name('Stroke Width')\n      .onChange((value) => handleSetConfig('xThickness', value))\n    shapeFolder\n      .add(config, 'xRandomnessShape')\n      .min(0)\n      .max(5)\n      .step(0.001)\n      .name('Randomness shape')\n      .onChange((value) => handleSetConfig('xRandomnessShape', value))\n    shapeFolder\n      .add(config, 'xRandomness')\n      .min(0)\n      .max(50)\n      .step(0.01)\n      .name('Randomness')\n      .onChange((value) => handleSetConfig('xRandomness', value))\n    shapeFolder\n      .add(config, 'yThickness')\n      .min(1)\n      .max(50)\n      .step(0.1)\n      .name('y thickness')\n      .onChange((value) => handleSetConfig('yThickness', value))\n    speedFolder\n      .add(config, 'min_speed')\n      .min(-6)\n      .max(6)\n      .step(0.01)\n      .name('Min speed')\n      .onChange((value) => handleSetConfig('min_speed', value))\n    speedFolder\n      .add(config, 'max_speed')\n      .min(-6)\n      .max(6)\n      .step(0.01)\n      .name('Max speed')\n      .onChange((value) => handleSetConfig('max_speed', value))\n\n    particlesFolder.open()\n    shapeFolder.open()\n    speedFolder.open()\n  }\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  return { config, handleSetConfig, particles, setParticles, isDebugMode }\n}\n\nexport default useParticlesConfig\n","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/index.tsx",["61"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Particle from './Particle';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Particle />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/react-app-env.d.ts",[],[],"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/reportWebVitals.ts",[],[],"/Users/ktt/Documents/programming-projects-2023/interactive-constellations/src/setupTests.ts",[],[],{"ruleId":"62","severity":2,"message":"63","line":11,"column":21,"nodeType":"64","endLine":11,"endColumn":33},{"ruleId":"62","severity":2,"message":"65","line":13,"column":33,"nodeType":"66","endLine":13,"endColumn":41},{"ruleId":"62","severity":2,"message":"67","line":14,"column":33,"nodeType":"66","endLine":14,"endColumn":51},{"ruleId":"62","severity":2,"message":"68","line":27,"column":3,"nodeType":"66","endLine":27,"endColumn":12},{"ruleId":"62","severity":2,"message":"69","line":37,"column":20,"nodeType":"66","endLine":37,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":39,"column":5,"nodeType":"72","endLine":39,"endColumn":7,"suggestions":"73"},{"ruleId":"62","severity":2,"message":"69","line":41,"column":24,"nodeType":"66","endLine":41,"endColumn":31},{"ruleId":"70","severity":1,"message":"74","line":43,"column":5,"nodeType":"72","endLine":43,"endColumn":7,"suggestions":"75"},{"ruleId":"62","severity":2,"message":"76","line":32,"column":37,"nodeType":"66","endLine":32,"endColumn":45},{"ruleId":"62","severity":2,"message":"76","line":34,"column":31,"nodeType":"66","endLine":34,"endColumn":39},{"ruleId":"62","severity":2,"message":"77","line":171,"column":3,"nodeType":"66","endLine":171,"endColumn":12},{"ruleId":"70","severity":1,"message":"78","line":173,"column":6,"nodeType":"72","endLine":173,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"66","messageId":"82","endLine":4,"endColumn":11},"react-hooks/rules-of-hooks","React Hook \"React.useRef\" is called conditionally. React Hooks must be called in the exact same order in every component render.","MemberExpression","React Hook \"useState\" is called conditionally. React Hooks must be called in the exact same order in every component render.","Identifier","React Hook \"useParticlesConfig\" is called conditionally. React Hooks must be called in the exact same order in every component render.","React Hook \"useEffect\" is called conditionally. React Hooks must be called in the exact same order in every component render.","React Hook \"useMemo\" is called conditionally. React Hooks must be called in the exact same order in every component render.","react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'config.particlesSides' and 'config.particlesSize'. Either include them or remove the dependency array.","ArrayExpression",["83"],"React Hook useMemo has missing dependencies: 'config.goldParticlesSize' and 'config.particlesSides'. Either include them or remove the dependency array.",["84"],"React Hook \"useState\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","React Hook \"useEffect\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["85"],"@typescript-eslint/no-unused-vars","'App' is defined but never used.","unusedVar",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [config.particlesSides, config.particlesSize]",{"range":"92","text":"93"},"Update the dependencies array to be: [config.goldParticlesSize, config.particlesSides]",{"range":"94","text":"95"},"Update the dependencies array to be: [init]",{"range":"96","text":"97"},[1170,1172],"[config.particlesSides, config.particlesSize]",[1306,1308],"[config.goldParticlesSize, config.particlesSides]",[4714,4716],"[init]"]